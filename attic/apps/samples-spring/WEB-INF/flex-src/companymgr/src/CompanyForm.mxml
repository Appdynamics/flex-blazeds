<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		   label="{company.id>-1?company.name:'New Company'}" xmlns:local="*">

	<fx:Metadata>
        [Event(name="companyCreated", type="CompanyEvent")]
        [Event(name="companyUpdated", type="CompanyEvent")]
        [Event(name="companyDeleted", type="CompanyEvent")]
    </fx:Metadata>
	
	<fx:Script>
		<![CDATA[

		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.rpc.Fault;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		
		[Bindable] public var company:Company;
		[Bindable] public var industries:ArrayCollection;

		private function save():void
		{
			company.name = companyName.text;
			company.address = address.text;
			company.city = city.text;
			company.state = state.text;
			company.zip = zip.text;
			company.phone = phone.text;
			company.industry = industry.selectedItem as Industry;
			if (company.industry == null)
			{
				Alert.show("Please enter/choose an industry from the dropdown for the operation to be successful.", "Save Company");
			}
			else
			{
				if (company.id == -1)
				{
					ro.create(company);	
				}
				else
				{
					ro.update(company);
				}
		        }
		}
		private function deleteItem():void
		{
			ro.remove(company);		
		}
			
		private function closeItem():void
		{
			parent.removeChild(this);
		}
			
		private function create_resultHandler(event:ResultEvent):void
		{
			company.id = event.result.id;
			dispatchEvent(new CompanyEvent(CompanyEvent.CREATED, company));			
		}

		private function update_resultHandler(event:ResultEvent):void
		{
			dispatchEvent(new CompanyEvent(CompanyEvent.UPDATED, company));			
		}

		private function remove_resultHandler(event:ResultEvent):void
		{
			dispatchEvent(new CompanyEvent(CompanyEvent.DELETED, company));			
		}
			
		private function remove_faultHandler(event:FaultEvent):void
		{
				if (event.fault.faultCode == "Server.ResourceUnavailable")
				{
					Alert.show("This is not allowed, as the 'remove(Company company)' method in the CompanyDAO class is excluded from remoting. To allow deletion, change the annotation on method to @RemotingInclude and try again.",
						"Delete Company");
				}
				else
				{
					Alert.show(event.fault.faultDetail);
				}
		}
			
		private function faultHandler(event:FaultEvent):void
		{
			Alert.show(event.fault.faultDetail);
		}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="ro" destination="companyService" endpoint="{&apos;http://{server.name}:{server.port}/samples-spring/messagebroker/amf&apos;}">
		<s:method name="create" result="create_resultHandler(event)"/>
		<s:method name="update" result="update_resultHandler(event)"/>
		<s:method name="remove" result="remove_resultHandler(event)" fault="remove_faultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<mx:Form>
		<mx:FormItem label="Id">
			<s:TextInput text="{company.id}" enabled="false"/>
		</mx:FormItem>
		<mx:FormItem label="Name">
			<s:TextInput id="companyName" text="{company.name}"/>
		</mx:FormItem>
		<mx:FormItem label="Industry">
			<local:BindableComboBox id="industry" dataProvider="{industries}" labelField="name" valueField="id" value="{company.industry.id}"/>
		</mx:FormItem>
		<mx:FormItem label="Address">
			<s:TextInput id="address" text="{company.address}"/>
		</mx:FormItem>
		<mx:FormItem label="City">
			<s:TextInput id="city" text="{company.city}"/>
		</mx:FormItem>
		<mx:FormItem label="State">
			<s:TextInput id="state" text="{company.state}"/>
		</mx:FormItem>
		<mx:FormItem label="Zip">
			<s:TextInput id="zip" text="{company.zip}"/>
		</mx:FormItem>
		<mx:FormItem label="Phone">
			<s:TextInput id="phone" text="{company.phone}"/>
		</mx:FormItem>
	</mx:Form>

	<s:HGroup left="8" bottom="8">
		<s:Button label="Close" click="closeItem()"/>
		<s:Button label="Save" click="save()"/>
		<s:Button label="Delete" click="deleteItem()"/>
	</s:HGroup>
	
</mx:Canvas>
