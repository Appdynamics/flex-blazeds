<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   applicationComplete="applicationCompleteHandler()">
	
	<fx:Script>
		<![CDATA[
		
		import mx.messaging.ChannelSet;
		import mx.messaging.channels.AMFChannel;
		import mx.controls.Alert;
		import mx.rpc.events.FaultEvent;
		
		private function applicationCompleteHandler():void
		{
			var channel:AMFChannel = new AMFChannel("my-amf", "/samples-spring/messagebroker/amf");
			var channelSet:ChannelSet = new ChannelSet();
			channelSet.addChannel(channel);
			ro.channelSet = channelSet;
		}
		
		private function faultHandler(event:FaultEvent):void
		{
			Alert.show(event.fault.faultString, "Error accessing RemoteObject");
		}
		
		private function login():void
		{
			ro.channelSet.login(userId.text, password.text);
		}
		
		private function logout():void
		{
			ro.channelSet.logout();	
		}
		
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- "productService" is defined in Spring's configuration file WEB-INF/config/web-application-config.xml
		and provides remote access to the org.springframework.flex.samples.product.ProductDAO class --> 
		<s:RemoteObject id="ro" destination="securedProductService" fault="faultHandler(event)"/>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="12" paddingBottom="12" paddingLeft="12" paddingRight="12"/>
	</s:layout>
	
	<mx:Form>
		<mx:FormItem label="User Id">
			<s:TextInput id="userId"/>
		</mx:FormItem>
		<mx:FormItem label="Password">
			<s:TextInput id="password" displayAsPassword="true"/>
		</mx:FormItem>
		<mx:FormItem direction="horizontal">
			<s:Button label="Login" click="login()"/>
			<s:Button label="Logout" click="logout()"/>
		</mx:FormItem>
	</mx:Form>
	
	<mx:DataGrid dataProvider="{ro.findAll.lastResult}" width="100%" height="100%"/>
	
	<!-- the findAll() method is defined in org.springframework.flex.samples.product.ProductDAO -->
	<s:Button label="Get Data" click="ro.findAll()"/>
	
</s:Application>
