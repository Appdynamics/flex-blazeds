<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->


<project name="samples-spring.war/build.xml" default="main" basedir="../..">
    <property file="${basedir}/build.properties"/>
    <property name="samples-spring.war" value="${basedir}/apps/samples-spring"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="src.dir" value="${samples-spring.war}/WEB-INF/src"/>
    <property name="classes.dir" value="${samples-spring.war}/WEB-INF/classes"/>
    <property name="context.root" value="samples-spring" />
    
    <path id="classpath">
        <fileset dir="${samples-spring.war}/WEB-INF/lib" includes="**/*.jar"/>        
        <pathelement location="${servlet.jar}"/>
    </path>

    <target name="main" depends="clean,samples"/>
    <target name="samples" depends="prepare,copy-resources,compile"/>

    <target name="prepare">
        <mkdir dir="${samples-spring.war}/WEB-INF/lib"/>
        <mkdir dir="${samples-spring.war}/WEB-INF/classes"/>
    </target>

    <target name="copy-resources">
        <fail unless="local.sdk.lib.dir" message="must specify local.sdk.lib.dir in server/build.properties"/>
        <fail unless="local.sdk.frameworks.dir" message="must specify local.sdk.frameworks.dir in build.properties"/>

        <!-- copy to the lib directory -->
        <copy todir="${samples-spring.war}/WEB-INF/lib">
            <fileset dir="${basedir}/lib" includes="${webapp.lib}" />
            <fileset dir="${basedir}/lib/spring" includes="**/*" />
            <fileset dir="${basedir}/lib/aspectj" includes="**/*" />
            <fileset file="${hsqldb.jar}" />
        </copy>

        <!-- copy to sampledb directory -->
        <copy todir="${basedir}/sampledb">
            <fileset file="${hsqldb.jar}" />
        </copy>

        <!-- copy to the classes directory -->
        <copy todir="${samples-spring.war}/WEB-INF/classes">
            <fileset dir="${samples-spring.war}/WEB-INF/src">
                <include name="**/*.xml"/>
            </fileset>
            <fileset dir="${basedir}/lib" includes="${webapp.classes}"/>
        </copy>
        
        <!-- create version.properties -->
        <propertyfile file="${samples-spring.war}/WEB-INF/flex/version.properties">
            <entry key="build" value="${manifest.Implementation-Version}.${build.number}"/>
            <entry key="minimumSDKVersion" value="${min.sdk.version}"/>
        </propertyfile>

    </target>

    <target name="run-depend" if="src.depend">
        <echo message="Removing class files that changed and dependent class files."/>
        <depend cache="${classes.dir}" srcdir="${src.dir}" destdir="${classes.dir}"/>
    </target>

    <target name="compile" depends="prepare,run-depend,copy-resources" description="compile">
        <javac source="1.5" debug="${src.debug}" destdir="${classes.dir}" srcdir="${src.dir}" classpathref="classpath"/>
    </target>

    <target name="compile-swfs">
        <property name="samples.src.dir" value="${samples-spring.war}/WEB-INF/flex-src" />
        <ant antfile="${samples.src.dir}/chat/build.xml" />
        <ant antfile="${samples.src.dir}/collaboration/build.xml" />
        <ant antfile="${samples.src.dir}/companymgr/build.xml" />
        <ant antfile="${samples.src.dir}/feedstarter/build.xml" />
        <ant antfile="${samples.src.dir}/insync01/build.xml" />
        <ant antfile="${samples.src.dir}/insync02/build.xml" />
        <ant antfile="${samples.src.dir}/insync03/build.xml" />
        <ant antfile="${samples.src.dir}/insync04/build.xml" />
        <ant antfile="${samples.src.dir}/insync05/build.xml" />
        <ant antfile="${samples.src.dir}/insync06/build.xml" />
        <ant antfile="${samples.src.dir}/simplepush/build.xml" />
        <ant antfile="${samples.src.dir}/spring-blazeds-101/build.xml" />
        <ant antfile="${samples.src.dir}/spring-blazeds-security-101/build.xml" />
        <ant antfile="${samples.src.dir}/traderdesktop/build.xml" />
    </target>

    <target name="package" depends="compile-swfs" description=" Creates distribution war file">

        <mkdir dir="${dist.dir}"/>

        <!-- 
        we don't want flex source naked in WEB-INF as that would lead to overlapping eclipse projects
        instead, zip it up and then put it in the war
         -->
        <zip destfile="${samples-spring.war}/WEB-INF/flex-src/flex-src.zip"  
            comment="${manifest.Implementation-Title} ${manifest.Implementation-Version}.${label} Spring Integration Samples Flex Source Code">
            <fileset dir="${samples-spring.war}/WEB-INF/flex-src" 
                excludes="**/build*.xml,flex-src.zip"/>
        </zip>

        <war file="${dist.dir}/samples-spring.war"
            webxml="${samples-spring.war}/WEB-INF/web.xml">
            <manifest>
                <attribute name="Sealed" value="${manifest.sealed}"/>
                <attribute name="Implementation-Title" value="${manifest.Implementation-Title} - Spring Integration Samples Application"/>
                <attribute name="Implementation-Version" value="${manifest.Implementation-Version}.${build.number}"/>
                <attribute name="Implementation-Vendor" value="${manifest.Implementation-Vendor}"/>
            </manifest> 
            <fileset dir="${samples-spring.war}" >
                <exclude name="**/**/build*.xml" />
                <exclude name="**/generated/**/*"/>
                <exclude name="WEB-INF/jsp/**/*" />
                <exclude name="WEB-INF/sessions/**/*" />
                <exclude name="WEB-INF/flex-src/**/*" />
                <!-- This is included in the war task already -->
                <exclude name="WEB-INF/web.xml" />
             </fileset>
             <fileset dir="${samples-spring.war}" includes="WEB-INF/flex-src/flex-src.zip" />
        </war>

        <copy todir="${dist.dir}/sampledb">
            <fileset dir="${basedir}/sampledb" />
            <fileset file="${hsqldb.jar}" />
        </copy>

    </target>

    <target name="clean" description="--> Removes jars and classes">
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${samples-spring.war}/WEB-INF/lib" includes="**/*"/>
            <fileset dir="${samples-spring.war}/WEB-INF/flex/jars" includes="**/*"/>
            <fileset dir="${samples-spring.war}/WEB-INF/flex/locale" includes="**/*"/>
            <fileset dir="${samples-spring.war}/WEB-INF/flex/libs" includes="**/*"/>
            <fileset dir="${classes.dir}" includes="**/*.class"/>
            <fileset dir="${basedir}/sampledb" includes="${hsqldb.jar}"/>
            <fileset file="${dist.dir}/samples-spring.war"/>
            <fileset file="${samples-spring.war}/WEB-INF/flex-src/flex-src.zip"/>
            <fileset dir="${samples-spring.war}/sqladmin"/>            
            <fileset dir="${samples-spring.war}/jmschat"/>
        </delete>
    </target>

    <target name="generated-clean">
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${samples-spring.war}" includes="**/generated/*" />
        </delete>
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${samples-spring.war}" includes="**/generated" />
        </delete>
    </target>

</project>
