<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
	creationComplete="creationCompleteHandler();">

    <!-- This example shows how to use a MultiTopicConsumer to listen for multiple
         subtopics. Before using subtopics, need
         to make sure that the following are set on the messaging destination:
         <properties>
             <server>
                <allow-subtopics>true</allow-subtopics>
                <subtopic-separator>.</subtopic-separator>
             </server>
         </properties>
     -->

    <mx:Panel id="mainPanel" height="100%" width="100%">
        <mx:HBox>
            <mx:Label text="Producer"/>
            <mx:Button label="Send Foo{counter1} to subtopic1" click="sendMessage()"/>
            <mx:Button label="Send Foo{counter2} to subtopic2" click="sendMessage(false)"/>
            <mx:Button label="Disconnect1" click="producer1.disconnect();"/>
            <mx:Button label="Disconnect2" click="producer2.disconnect();"/>
            <mx:CheckBox label="Connected1?" selected="{producer1.connected}"/>
            <mx:CheckBox label="Connected2?" selected="{producer2.connected}"/>
        </mx:HBox>
        <mx:HBox>
            <mx:Label text="Consumer"/>
            <mx:Button label="Add sub to subtopic1" click="consumer.addSubscription('chat.newton1');"/>
            <mx:Button label="Add sub to subtopic2" click="consumer.addSubscription('chat.newton2');"/>
            <mx:Button label="Remove sub to subtopic1" click="consumer.removeSubscription('chat.newton1');"/>
            <mx:Button label="Remove sub to subtopic2" click="consumer.removeSubscription('chat.newton2');"/>
        </mx:HBox>
        <mx:HBox>
            <mx:Label text="Consumer"/>
            <mx:Button label="Subcribe" click="consumer.subscribe();"/>
            <mx:Button label="Unsubscribe" click="consumer.unsubscribe();"/>
            <mx:Button label="Disconnect" click="consumer.disconnect();"/>
            <mx:CheckBox label="Connected?" selected="{consumer.connected}"/>
            <mx:CheckBox label="Subscribed?" selected="{consumer.subscribed}"/>
        </mx:HBox>
        <mx:Button label="Clear" click='ta.text = ""'/>
        <mx:TextArea id="ta" width="100%" height="100%"/>
    </mx:Panel>

    <mx:Producer id="producer1"
        destination="messaging_AMF_Stream_Subtopic"
        fault="faultHandler(event)"
        subtopic="chat.newton1"/>

    <mx:Producer id="producer2"
        destination="messaging_AMF_Stream_Subtopic"
        fault="faultHandler(event)"
        subtopic="chat.newton2"/>

    <mx:Script>
        <![CDATA[
            import mx.messaging.MultiTopicConsumer;
            import mx.messaging.Producer;
            import mx.messaging.events.MessageFaultEvent;
            import mx.messaging.events.MessageEvent;
            import mx.messaging.messages.AsyncMessage;

            import mx.logging.Log;
            import mx.logging.targets.TraceTarget;

            [Bindable]
            public var counter1:int = 0;

            [Bindable]
            public var counter2:int = 0;

            [Bindable]
            public var consumer:MultiTopicConsumer = new MultiTopicConsumer();

            private function creationCompleteHandler():void
            {
                var target:TraceTarget = new TraceTarget();
                target.includeLevel = true;
                target.filters = ["mx.messaging.*", "mx.rpc.*"];
                Log.addTarget(target);

                consumer.destination = "messaging_AMF_Stream_Subtopic";
                consumer.addEventListener(MessageEvent.MESSAGE, messageHandler);
                consumer.addEventListener(MessageFaultEvent.FAULT, faultHandler);
            }

            private function sendMessage(firstProducer:Boolean = true):void
            {
                var msg:AsyncMessage = new AsyncMessage();
                if (firstProducer)
                {
                    msg.body = "Foo" + counter1++;
                    producer1.send(msg);
                }
                else
                {
                    msg.body = "Foo" + counter2++;
                    producer2.send(msg);
                }
            }

            private function messageHandler(event:MessageEvent):void
            {
                ta.text += "Consumer received message: "+ event.message.body + "\n";
            }

            private function faultHandler(event:MessageFaultEvent):void
            {
                ta.text += "Received fault: " + event.faultString + "\n";
            }
        ]]>
    </mx:Script>
</mx:Application>