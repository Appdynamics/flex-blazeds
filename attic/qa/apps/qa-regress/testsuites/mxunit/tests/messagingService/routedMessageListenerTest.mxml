<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="runTests()">
    

    <mx:Script>
    <![CDATA[
        
        /*
         *    Test case to check MessageRoutedListener
         */
    
        import mx.messaging.messages.AsyncMessage;
        import mx.messaging.messages.IMessage;
        import mx.events.PropertyChangeEvent;
        import mx.messaging.events.MessageFaultEvent;
        import mx.messaging.events.MessageEvent;
        import mx.messaging.Producer;
        import mx.messaging.Consumer;
        import qa.mxunit.*;

        private var consumer:Consumer;
        private var producer:Producer;
        private var dest:String = "oqp_topic";
        
        private var manager:MXUnitManager = MXUnitManager.getInstance();
        
        public function runTests():void
        {
            consumer = new Consumer();
            consumer.destination = dest;
            
            producer = new Producer();
            producer.destination = dest;
            
            consumer.addEventListener(MessageEvent.MESSAGE, handleMessage);
            consumer.addEventListener(MessageFaultEvent.FAULT, handleMessageFault);
            consumer.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, handlePropertyChanged);    
                    
            consumer.subscribe();               
        }
        
        public function testMessage():void
        {   
            var msg:IMessage = new AsyncMessage();
            msg.body = "hello world";
            producer.send(msg);
        }
        
        private function handlePropertyChanged(event:PropertyChangeEvent):void 
        {
            //make sure the ack is for a subscribe operation before kick-off
            if(event.property == "subscribed" && consumer.subscribed)
            {
                manager.addTests(this, ["testMessage"], 5000);
            }
        }   
        
        private function handleMessage(event:MessageEvent):void
        {
           log("MessageEvent:" + event.message.body);
           Assert.assertEquals("The original message should be replaced", event.message.body, "The original message has been removed");
           Assert.hasPendingTest = false;
           closeAllConnections();
        }        
        
        private function handleMessageFault(event:MessageFaultEvent):void
        {
            log("MessageFaultEvent: detail=" + event.faultDetail + " string=" + event.faultString);
            Assert.fail("there should be no fault " + event.faultString);
            Assert.hasPendingTest = false;  
            closeAllConnections();  
        }
        
        private function closeAllConnections():void
        {
            consumer.disconnect();
            producer.disconnect();
        }
        
        private function log(s:String):void
        {
            ta.text += s + "\n";
        }
    ]]>
    </mx:Script>
    <mx:Button label="Reset" click="ta.text=''" />
    <mx:TextArea id="ta" width="70%" height="50%" />
</mx:Application>