<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Application  width='800' height='800' xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="startRun()">

    <mx:Consumer id="con" destination ="topic_authentication" fault="handleConFault(event)" propertyChange="handleConChange(event)"/>
    
    <mx:Script>
    <![CDATA[
    	import mx.messaging.config.ServerConfig;
    	import mx.messaging.Channel;
    	import mx.messaging.ChannelSet;
        import mx.events.PropertyChangeEvent;
        import mx.rpc.events.*;
        import qa.mxunit.Assert;
        import qa.mxunit.MXUnitManager;
        import mx.messaging.messages.*;
        import mx.messaging.events.*;   
        
        private var cs:ChannelSet;
        private var ch:Channel;
        
        //--------------------------------------------------------------------------
        //
        // Setup
        // 
        //--------------------------------------------------------------------------       
        private function startRun():void {
        	cs = new ChannelSet(); 
            ch = ServerConfig.getChannel("qa-polling-amf"); 
            cs.addChannel(ch);  
            con.channelSet = cs;            
            MXUnitManager.addTests(this,["testConsumerWithCredential"], 3000);                        
        }
        //--------------------------------------------------------------------------
        //
        // Test Methods 
        // 
        //-------------------------------------------------------------------------- 
        // testConsumerWithCredential
        /**
         * Test that a consumer that attempts to subscribe to a destintation with a security constraint
         * and supplies valid credentials can subscribe successfully. 
         */
        public function testConsumerWithCredential():void {                        
            con.setCredentials("sampleuser","samplepassword");            
            con.subscribe();
            Assert.hasPendingTest = true;
        }
        
        private function handleConFault(event:MessageFaultEvent):void{
           Assert.fail("There should be no fault for consumer after authentication");
           Assert.hasPendingTest = false;
        }
        
        private function handleConChange(event:PropertyChangeEvent):void{
            if (event.property == "subscribed") 
                Assert.assertTrue(true, event.newValue);
            Assert.hasPendingTest = false;
        }
      
    ]]>
    </mx:Script>

</mx:Application>