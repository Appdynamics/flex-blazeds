<?xml version="1.0" ?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:qa="http://www.adobe.com/2006/flexqa" creationComplete="run()">
	
	<mx:HTTPService 
			id="hs" 
			destination="basic.xml_http"
			method="get"
			useProxy="true"
			result="onServiceResult(event)" 
			fault="onServiceFault(event)"
			/>

		    <mx:HTTPService 
				id="hsFault" 
				useProxy="true"
		    	destination="bogus" 
		        fault="onServiceFaultTest(event)" />
	
	<mx:Script>
	<![CDATA[
        /****************************************************
        *  simple HttpService test
        * **************************************************/
        
		import qa.mxunit.*;
		import mx.rpc.events.*;

        public var result:Object;
		public var type : String;
		public var faultType : String;

        public function onServiceResult(event:ResultEvent):void {
        	 type = event.type;
			 result = event.result;
		}


	    public function onServiceFault(event:FaultEvent):void {
            trace("http service fault: " + event.fault.faultString);
        }
		
		 public function onServiceFaultTest(event:FaultEvent):void {
            faultType = event.type;
        }

		public function run():void {
			hs.send();
			hsFault.send()

            MXUnitManager.delay = 6000;
			MXUnitManager.addTests(this,["Test_attributes","Test_result","Test_fault"],10000);
		}

        public function Test_attributes():void {
            Assert.isTrue(hs.useProxy == true, "useProxy should be FALSE");
			Assert.isTrue(hs.method == "get", "method should be get");
			Assert.isTrue(hs.lastResult == result, "hs.lastResult should be event.result");
		}
		
		public function Test_result():void {
            Assert.isTrue(type == "result", "should result in a Result");
		}

    	public function Test_fault():void {
			Assert.isTrue(faultType == "fault", "should result in a Fault");
		}

	]]>
	</mx:Script>
</mx:Application>