<?xml version="1.0" ?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Application 
		xmlns:mx="http://www.adobe.com/2006/mxml" 
		xmlns:qa="http://www.adobe.com/2006/flexqa"
		creationComplete="run()"
		>
	
	<!-- This test duplicates the mxunit/tests/proxyService/httpservice/amfchannel/hs_send_with_request.mxml -->
	<!--	
		<mx:HTTPService 
			id="hsWithParamsPost" 
			destination="HTTPProxyDest_runtime"
			method="post"
			useProxy="true"
			result="onServiceResultWithParamsPost(event)" 
			fault="onServiceFaultWithParamsPost(event)"
			>
			
			<mx:request>            
	                <mx:value>value</mx:value>                            
	        </mx:request>		
				
		</mx:HTTPService>	 
	-->
	
	<mx:Script>
	
	<![CDATA[

		import qa.mxunit.*;
		import mx.rpc.events.*;
		import mx.controls.*;
		import mx.rpc.http.*;
		import mx.messaging.*;
		import mx.messaging.channels.*;

		public var resultWithParamsPost : Object;
	    public var myProxyService:HTTPService;
	    //Use this param to send as well as to test what get returned
	    public var testValue:String = "HTTPProxyDest works";

        public function onServiceFaultWithParamsPost(event:FaultEvent):void {
            trace("service fault: " + event.fault.faultString);
        }

  		public function onServiceResultWithParamsPost(event:ResultEvent):void {
			resultWithParamsPost = event.result;
		}
		
		public function run():void {
			myProxyService = new HTTPService();
			myProxyService.destination = "HTTPProxyDest_runtime";                                                        
			myProxyService.method="POST"; 
			myProxyService.useProxy=true;
			myProxyService.addEventListener("result", onServiceResultWithParamsPost);
			myProxyService.addEventListener("fault", onServiceFaultWithParamsPost);
			var cs:ChannelSet = new ChannelSet();     
			cs.addChannel(new AMFChannel(null, "http://{server.name}:{server.port}/qa-regress/messagebroker/amf")); 
			myProxyService.channelSet = cs;
            myProxyService.send({value: testValue});
			
			// run test
            MXUnitManager.delay = 6000;
			MXUnitManager.addTests(this,["HTTPProxyDestTest"],2000);
		}

		public function HTTPProxyDestTest():void {

			Assert.isTrue(resultWithParamsPost.parameters.value == testValue, "result.parameters.value should be '" + testValue + "'");
		}		

	]]>
	</mx:Script>
</mx:Application>